<?php

require __DIR__ . '/vendor/autoload.php';
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

use Illuminate\Support\Facades\DB;

echo "üîç AN√ÅLISIS: L√≥gica de Permisos por Usuario vs Permisos por Rol\n";
echo "================================================================\n\n";

// 1. Estructura de userpermissions
echo "üìã Estructura de userpermissions:\n";
$userPermColumns = DB::select("SELECT column_name, data_type FROM information_schema.columns WHERE table_name = 'userpermissions' ORDER BY ordinal_position");
foreach ($userPermColumns as $col) {
    echo "  - {$col->column_name} ({$col->data_type})\n";
}
echo "\n";

// 2. Verificar qu√© referencia permission_id
echo "üîó ¬øQu√© es permission_id en userpermissions?\n";
$sample = DB::table('userpermissions')->first();
if ($sample) {
    echo "  user_id: {$sample->user_id}\n";
    echo "  permission_id: {$sample->permission_id}\n";

    // ¬øEs de la tabla permissions (permisos por rol)?
    $perm = DB::table('permissions')->where('id', $sample->permission_id)->first();
    if ($perm) {
        echo "  ‚ùå PROBLEMA: Referencia tabla 'permissions' (permisos de ROL)\n";
        echo "     route_path: {$perm->route_path}\n";
        echo "     action: {$perm->action}\n";
    }
}
echo "\n";

// 3. Propuesta de soluci√≥n
echo "üí° SOLUCI√ìN PROPUESTA:\n";
echo "=====================\n\n";

echo "OPCI√ìN 1: Cambiar userpermissions para usar moduleview_id directamente\n";
echo "-----------------------------------------------------------------------\n";
echo "‚Ä¢ userpermissions.permission_id ‚Üí userpermissions.moduleview_id\n";
echo "‚Ä¢ Guardar directamente el ID de moduleviews (vistas del sistema)\n";
echo "‚Ä¢ NO usar la tabla permissions (que es para roles)\n";
echo "‚Ä¢ Simplifica la l√≥gica: Usuario ‚Üí ModuleView directo\n\n";

echo "OPCI√ìN 2: Mantener estructura actual pero clarificar\n";
echo "-----------------------------------------------------\n";
echo "‚Ä¢ Crear permisos 'view' en permissions para CADA moduleview\n";
echo "‚Ä¢ Mantener userpermissions ‚Üí permissions ‚Üí moduleviews\n";
echo "‚Ä¢ M√°s complejo pero mantiene consistencia con roles\n\n";

echo "üéØ RECOMENDACI√ìN: OPCI√ìN 1\n";
echo "==========================\n";
echo "Raz√≥n: Los permisos de USUARIO son m√°s simples:\n";
echo "  - Usuario puede ver Vista X (s√≠/no)\n";
echo "  - No necesita actions (view/create/edit/delete)\n";
echo "  - Eso es para ROLES, no usuarios individuales\n\n";

echo "üìä ¬øCu√°ntos moduleviews hay?\n";
$mvCount = DB::table('moduleviews')->count();
echo "  Total: {$mvCount}\n\n";

echo "üìä ¬øCu√°ntos permisos 'view' existen?\n";
$viewPermCount = DB::table('permissions')->where('action', 'view')->count();
echo "  Total: {$viewPermCount}\n";
echo "  Faltantes: " . ($mvCount - $viewPermCount) . "\n\n";

if ($mvCount > $viewPermCount) {
    echo "‚ùå HAY MODULEVIEWS SIN PERMISO 'view' ‚Üí Por eso falla\n";
}
